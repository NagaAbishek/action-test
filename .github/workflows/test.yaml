name: test job

on:
  workflow_dispatch:
    inputs:
      jobSelection:
        description: 'Select a job to run'
        required: true
        type: choice
        options:
          - coop-main
          - coop-migros
          - migros-coop
          - migros-main

env:
  ECR_REPOSITORY: 043437012221.dkr.ecr.ap-south-1.amazonaws.com/second
  AWS_REGION: ap-south-1
  JOB_DEFINITION_NAME: second 
  JOB_QUEUE: queue
  JOB_NAME: second
  EXECUTION_ROLE_ARN: arn:aws:iam::043437012221:role/ecsTaskExecutionRole
  USER_NAME: root
  IMAGE_TAG: latest

jobs:
  build-push-update-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker image for coop-main
        if: ${{ github.event.inputs.jobSelection == 'coop-main' }}
        run: docker build -f ./coop/coop-main/Dockerfile -t your_repository/coop-main:latest ./coop/coop-main
        env:
          CONTEXT: coop-main

      - name: Build and Push Docker image for coop-migros
        if: ${{ github.event.inputs.jobSelection == 'coop-migros' }}
        run: docker build -f ./coop/coop-migros/Dockerfile -t your_repository/coop-migros:latest ./coop/coop-migros
        env:
          CONTEXT: coop-migros

      - name: Build and Push Docker image for migros-coop
        if: ${{ github.event.inputs.jobSelection == 'migros-coop' }}
        run: docker build -f ./coop/migros-coop/Dockerfile -t your_repository/migros-coop:latest ./coop/migros-coop
        env:
          CONTEXT: migros-coop

      - name: Build and Push Docker image for migros-main
        if: ${{ github.event.inputs.jobSelection == 'migros-main' }}
        run: docker build -f ./coop/migros-main/Dockerfile -t your_repository/migros-main:latest ./coop/migros-main
        env:
          CONTEXT: migros-main

      # Add Docker login and push commands after each Docker build command if needed.     

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          cd second
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push image to Amazon ECR
        run: |
          docker push $ECR_REPOSITORY:$IMAGE_TAG

      # Register a new revision of the job definition with the updated image
      - name: Update Job Definition with new image
        id: update-job-definition
        run: |
          cd second
          aws batch register-job-definition \
          --job-definition-name $JOB_DEFINITION_NAME \
          --type container \
          --container-properties "file://$(pwd)/container-properties.json" \
          --platform-capabilities FARGATE

      # Extract the new job definition revision ARN for use in starting a job
      - name: Extract Job Definition ARN
        run: echo "JOB_DEFINITION_ARN=$(aws batch describe-job-definitions --job-definition-name $JOB_DEFINITION_NAME --status ACTIVE --query 'jobDefinitions[0].jobDefinitionArn' --output text)" >> $GITHUB_ENV

      # Start a Batch job using the new job definition
      - name: Start Batch Job
        run: |
          aws batch submit-job \
          --job-name $JOB_NAME \
          --job-queue $JOB_QUEUE \
          --job-definition $JOB_DEFINITION_ARN 
